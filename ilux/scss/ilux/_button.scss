// Variables
//------------------------------------------------------
$button-normal:                  $lavender-light !default;
$button-default:                 $normal-color !default;
$button-primary:                 $primary-color !default;
$button-success:                 $success-color !default;
$button-info:                    $info-color !default;
$button-warning:                 $warning-color !default;
$button-danger:                  $danger-color !default;

$button-colors-vars: (
  $button-normal,
  $button-default,
  $button-primary,
  $button-success,
  $button-info,
  $button-warning,
  $button-danger,
  $facebook-color,
  $google-plus-color,
  $twitter-color,
  $linkedin-color,
  $pinterest-color,
  $dibbble-color);

$button-colors:
("normal",
"default",
"primary",
"success",
"info",
"warning",
"danger",
"facebook",
"google",
"twitter",
"linkedin",
"pinterest",
"dribbble");

$button-font-color-dark:         $darkgray-dark !default;
$button-font-color-light:        $white !default;

$button-opacity:                 45 !default;
$button-inner-shadow:            inset 0 2px 3px rgba(0, 0, 0, .125) !default;
$button-outer-shadow:            0 2px 3px rgba(0, 0, 0, .125) !default;

$toggle-off-color:               $darkgray-light !default;
$toggle-on-color:                $lavender-light !default;

// Exports
//------------------------------------------------------

@include exports("button") {

  /**
   * Button
   * --------------------------------------------------
   */
  .btn {
    font-family: 'Roboto', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-weight: 200;
    border-radius: 0;
    font-size: 1.6rem;
    padding: .6rem 1rem;
    vertical-align: middle;

    &-newsletter { margin-left: 2rem !important;padding: 1rem 2rem; }

    &,
    &-social {
      @include transition(all 0.095s ease-in);
      vertical-align: middle;
    }

    &,
    &.disabled,
    &[disabled] {
        border-color: $button-normal;
        background-color: transparent;
    }

    // Hover
    &-social:hover,
    &:hover {
      background-color: $white;
      color: #888;
      border-color: darken($button-normal, 10%);
      @include box-shadow($value: $button-outer-shadow);
    }

    // Focus
    &-social:hover,
    &:focus { 
      background-color: $white;
      border-color: darken($button-normal, 10%);
      color: #666;
    }

    &,
    &:hover,
    &:active,
    &.active {
      outline: none !important;
    }
    &:active,
    &.active {
      background-color: $white;
      @include box-shadow($value: $button-inner-shadow);
    }

    &.disabled, 
    &[disabled] {
        @include opacity($opacity: $button-opacity, $filter: true);
    }

    // Filled
    &-filled,&-active {
      background-color: $button-normal;
      background-image: -webkit-linear-gradient(top left, lighten($button-normal, 5%), lighten($button-normal, 5%), darken($button-normal, 7%));
      background-image: -o-linear-gradient(top left, lighten($button-normal, 5%), lighten($button-normal, 5%), darken($button-normal, 7%));
      background-image: linear-gradient(to bottom right, lighten($button-normal, 5%), lighten($button-normal, 5%), darken($button-normal, 7%));
      background-position: -1px 0px;
      background-size: 110%;
      border-color: rgba(0,0,0,0);
      text-shadow: 0px -1px rgba(0,0,0,.2);
      @include transition(all 0.095s ease-in);

      // Filled Hover
      &:hover {
        border-color: rgba(0,0,0,.2);
        @include box-shadow($value: $button-outer-shadow);
      }

      // Filled Active
      &:active {
        background-color: $button-normal;
        background-image: -webkit-linear-gradient(left, lighten($button-normal, 5%), lighten($button-normal, 5%), darken($button-normal, 7%));
        background-image: -o-linear-gradient(left, lighten($button-normal, 5%), lighten($button-normal, 5%), darken($button-normal, 7%));
        background-image: linear-gradient(to right, lighten($button-normal, 5%), lighten($button-normal, 5%), darken($button-normal, 7%));
        border-color: rgba(0,0,0,.2);
        @include box-shadow($value: $button-inner-shadow);
      }
    
      &,
      &:hover,
      &:focus,
      &:active,
      &.active {
          color: $button-font-color-light;
          outline: none !important;     
      }
    }

    // Sizes
    @at-root &-xl { font-size: 2rem;padding: 1rem 1.3rem; }
    @at-root &-lg { font-size: 1.75rem;padding: .8rem .9rem; }
    @at-root &-sm { font-size: 1.35rem;padding: .4rem .8rem; }
    @at-root &-xs { font-size: 1rem;padding: .3rem .7rem; }

    $btn-selector: ();
    @each $btn-item in $button-colors {
      $btn-selector: append($btn-selector, unquote('#{$btn-item}'), 'comma');
    }

    $i: 1;
    @each $btn-item-color in $btn-selector {
      @at-root .btn-#{$btn-item-color} {

        color: nth($button-colors-vars, $i);
        
        &,
        &.disabled, 
        &[disabled] {
            border-color: nth($button-colors-vars, $i);
            background-color: transparent;
        }

        // Hover
        &:hover {
          color: darken(nth($button-colors-vars, $i), 15%);
          border-color: darken(nth($button-colors-vars, $i), 15%);
        }

        // Focus
        &:focus {
          color: darken(nth($button-colors-vars, $i), 15%);
          border-color: darken(nth($button-colors-vars, $i), 15%);
        }

        &:active,
        &.active {
            color: darken(nth($button-colors-vars, $i), 15%);
        }

        // Filled Buttons
        &.btn-active,
        &.btn-filled,
        &-filled {
          background-color: nth($button-colors-vars, $i);
          background-image: -webkit-linear-gradient(top left, lighten(nth($button-colors-vars, $i), 5%), lighten(nth($button-colors-vars, $i), 5%), darken(nth($button-colors-vars, $i), 7%));
          background-image: -o-linear-gradient(top left, lighten(nth($button-colors-vars, $i), 5%), lighten(nth($button-colors-vars, $i), 5%), darken(nth($button-colors-vars, $i), 7%));
          background-image: linear-gradient(to bottom right, lighten(nth($button-colors-vars, $i), 5%), lighten(nth($button-colors-vars, $i), 5%), darken(nth($button-colors-vars, $i), 7%));
          background-position: -1px 0px;
          background-size: 110%;
          border-color: rgba(0,0,0,0);
          text-shadow: 0px -1px rgba(0,0,0,.2);
          @include transition(all 0.095s ease-in);

          // Filled Hover
          &:hover {
            border-color: rgba(0,0,0,.2);
            @include box-shadow($value: $button-outer-shadow);
          }

          // Filled Active
          &:active {
            background-color: nth($button-colors-vars, $i);
            background-image: -webkit-linear-gradient(left, lighten(nth($button-colors-vars, $i), 5%), lighten(nth($button-colors-vars, $i), 5%), darken(nth($button-colors-vars, $i), 7%));
            background-image: -o-linear-gradient(left, lighten(nth($button-colors-vars, $i), 5%), lighten(nth($button-colors-vars, $i), 5%), darken(nth($button-colors-vars, $i), 7%));
            background-image: linear-gradient(to right, lighten(nth($button-colors-vars, $i), 5%), lighten(nth($button-colors-vars, $i), 5%), darken(nth($button-colors-vars, $i), 7%));
            border-color: rgba(0,0,0,.2);
            @include box-shadow($value: $button-inner-shadow);
          }
        
          &,
          &:hover,
          &:focus,
          &:active,
          &.active {
              color: $button-font-color-light;
              outline: none !important;     
          }
        }

        // Link Button
        &-link {
          padding: 0 !important;
          position: relative;
          background-color: transparent;
          border-top: none !important;
          border-right: none !important;
          border-left: none !important;
          border-bottom: solid 1px nth($button-colors-vars, $i);
          text-decoration: none !important;

          &,
          &:hover,
          &:active,
          &.active,
          &:focus { 
            color: nth($button-colors-vars, $i);
            outline: none !important;
            border-bottom: solid 1px nth($button-colors-vars, $i);
            background-color: transparent !important;
            box-shadow: none !important;
          }

          &:after {
            content: "";
            display: block;
            position: absolute;
            bottom: -2px;
            width: 0%;
            height: 1px;
            background-color: nth($button-colors-vars, $i);
            @include transition(all 0.095s ease-in);
          }

          // Hover
          &:hover { 
            color: nth($button-colors-vars, $i) !important;
            &:after { width: 100%; }
          }

          // Active
          &:active { box-shadow: none;top: 1px; }

          // Focus
          &:focus { &:after { width: 100%; } }

          & span { margin: 0 }
        }

      }
      $i: $i + 1;
    }

    // Social Nerwork Buttons
    &-social { border-width: 1px;border-style: solid;padding: .5rem 1rem; }

    &-square,&-circle { height: 4rem;width: 4rem; }
    &-circle { border-radius: 50%; }

    // Rounded Buttons
    @at-root &-rounded { border-radius: 7px !important; }

    // Pill Button
    @at-root &-pill { 
      border-top-left-radius: 25px !important;
      border-top-right-radius: 25px !important;
      border-bottom-right-radius: 25px !important;
      border-bottom-left-radius: 25px !important;
    }

    @at-root &-link {
      padding: 0 !important;
      position: relative;
      background-color: transparent;
      border-top: none !important;
      border-right: none !important;
      border-left: none !important;
      border-bottom: solid 1px $button-default !important;
      color: $button-default;
      text-decoration: none !important;

      &,
      &:hover,
      &:active,
      &.active,
      &:focus { outline: none !important;background-color: transparent !important;box-shadow: none !important; }

      &:after {
        content: "";
        display: block;
        position: absolute;
        bottom: -2px;
        width: 0%;
        height: 1px;
        background-color: $button-default;
        @include transition(all 0.095s ease-in);
      }

      // Hover
      &:hover { 
        color: $button-default;
        &:after { width: 100%; }
      }

      // Active
      &:active { box-shadow: none;top: 1px; }

      // Focus
      &:focus { &:after { width: 100%; } }

      & span { margin: 0 }
    }

    @at-root .open .dropdown-toggle.btn-default {
        border-color: $button-normal;
        background-color: $button-normal;      
    }

    @at-root span { margin: 0 1rem; }

  }



  /**
   * Button Group
   * --------------------------------------------------
   */
  .btn-group {

    width: 100%;

    & .btn+.btn,
    & .btn+&,
    & &+.btn,
    & &+&
    {
      margin-left: 0
    }

    // Sizes
    &-xl > .btn { padding: 1.5rem 2.2rem;font-size: 2rem; }

    & > .btn { 
      background-color: $white;

      &:not(:first-child):not(:last-child) {
        border-right: 0;
        border-left: 0;
      }

    }

    // Dropdown
    &.dropdown-toggle {

      // Open
      &.open {
        .btn {
          background-color: inherit;
          border-color: inherit;
        }
      }


    }
  }



  /**
   * Paginations
   * --------------------------------------------------
   */
  .pagination {

    & .btn {

      @media (min-width: 360px) { margin: 0 .3rem; }
      @media (min-width: 760px) { margin: 0 .5rem; }
      @media (min-width: 991px) { margin: 0 .7rem; }
      
      // Arrows
      &.btn-direction {
        padding-top: .5rem;
        padding-bottom: .7rem;
        & i {
          font-size: 1rem;
          line-height: 1.2;
        }
      }

      &[class*='circle'] {
        @media (min-width: 360px) { margin: 0 .15rem; }
        @media (min-width: 760px) { margin: 0 .35rem; }
        @media (min-width: 991px) { margin: 0 .55rem; }
      }

      // Current Page
      &.btn-active {
        font-weight: bold;
      }

      &[class*='filled'] {
        &.btn-active {
          position: relative;
          &:after {
            content: "";
            display: block;
            position: absolute;
            bottom: 1px;
            right: 0;
            left: 0;
            margin: auto;
            width: 0;
            height: 0;
            border: solid 5px $white;
            border-top-color: transparent;
            border-right-color: transparent;
            border-left-color: transparent;
          }
          &:before {
            content: "";
            display: block;
            position: absolute;
            width: 93%;
            height: 95%;
            top: 1px;
            left: 1px;
            background-color: transparent;
            border: solid 1px $white;
            border-radius: 5px;
          }
        }

        &[class*='circle'] {
          &.btn-active {
            &:before { width: 95%; }
            &:before,&:after {
              border-radius: 50%;
            }
          }
        }

      }

    }

  }




  /**
   * Toggle On-Off
   * --------------------------------------------------
   */
  .toggle-wrapper {
    overflow: hidden;
    display: inline-block;

    & input { position: absolute;left: -99em; }

    & .toggle {
      cursor: pointer;
      display: inline-block;
      position: relative;
      width: 100px;
      height: 40px;
      margin-bottom: 0;
      border: solid 1px rgba(0,0,0,0);
      border-radius: 5px;
      -webkit-transition: all 200ms cubic-bezier(0.445, 0.05, 0.55, 0.95);
      transition: all 200ms cubic-bezier(0.445, 0.05, 0.55, 0.95);
      background-color: $toggle-off-color;
      background-image: radial-gradient($toggle-off-color,$toggle-off-color,darken($toggle-off-color,10%));
      background-image: -webkit-radial-gradient($toggle-off-color,$toggle-off-color,darken($toggle-off-color,10%));
      background-image: -o-radial-gradient($toggle-off-color,$toggle-off-color,darken($toggle-off-color,10%));
      background-image: -moz-radial-gradient($toggle-off-color,$toggle-off-color,darken($toggle-off-color,10%));

      // Hover
      &:hover { 
        border-color: rgba(0,0,0,.2);
        @include box-shadow($value: $button-outer-shadow);
      }
      
      // Active
      &:active {
        @include box-shadow($value: $button-inner-shadow);
      }

      &:before, &:after{
        position: absolute;
        line-height: 40px;
        font-size: 14px;
        z-index: 2;
        -webkit-transition: all 200ms cubic-bezier(0.445, 0.05, 0.55, 0.95);
        transition: all 200ms cubic-bezier(0.445, 0.05, 0.55, 0.95);
      }
      &:before{ content: "OFF";left: 13px;color: $toggle-off-color; }
      &:after{ content: "ON";right: 13px;color: #fff; }

    }

    &.toggle-pill {
      & .toggle { border-radius: 50px; }
      & .toggle-handler { border-radius: 50px; }
    }

    // Disabled
    &.toggle-disabled {
      opacity: 0.5;
      & * { cursor: not-allowed !important; }
    }

    & .toggle-handler{
      display: inline-block;
      position: relative;
      z-index: 1;
      background: #fff;
      width: 50px;
      height: 36px;
      margin: 0;
      border-radius: 3px;
      top: 1px;
      left: 1px;
      -webkit-transition: all 200ms cubic-bezier(0.445, 0.05, 0.55, 0.95);
      transition: all 200ms cubic-bezier(0.445, 0.05, 0.55, 0.95);
      -webkit-transform: translateX(0px);
      transform: translateX(0px);
    }

    & input:checked + .toggle:before { color: #fff;text-shadow: 0px -1px rgba(0,0,0,.1); }
    & input:checked + .toggle .toggle-handler {
      width: 45px;
      -webkit-transform: translateX(51px);
      transform: translateX(51px);
      border-color: #fff;
    }
    & input:checked + .toggle { 
      background-color: $toggle-on-color;
      background-image: radial-gradient($toggle-on-color,$toggle-on-color,darken($toggle-on-color,10%));
      background-image: -webkit-radial-gradient($toggle-on-color,$toggle-on-color,darken($toggle-on-color,10%));
      background-image: -o-radial-gradient($toggle-on-color,$toggle-on-color,darken($toggle-on-color,10%));
      background-image: -moz-radial-gradient($toggle-on-color,$toggle-on-color,darken($toggle-on-color,10%));
    }
    & input:checked + .toggle:after { color: $toggle-on-color; }

    $toggle-selector: ();
    @each $toggle-item in $button-colors {
      $toggle-selector: append($toggle-selector, unquote('#{$toggle-item}'), 'comma');
    }

    $i: 1;
    @each $toggle-item-color in $toggle-selector {

      &.toggle-#{$toggle-item-color} {

        & .toggle {
          background-color: $toggle-off-color;
          background-image: radial-gradient($toggle-off-color,$toggle-off-color,darken($toggle-off-color,10%));
          background-image: -webkit-radial-gradient($toggle-off-color,$toggle-off-color,darken($toggle-off-color,10%));
          background-image: -o-radial-gradient($toggle-off-color,$toggle-off-color,darken($toggle-off-color,10%));
          background-image: -moz-radial-gradient($toggle-off-color,$toggle-off-color,darken($toggle-off-color,10%));
        }
        & input:checked + .toggle { 
          background-color: nth($button-colors-vars, $i);
          background-image: radial-gradient(nth($button-colors-vars, $i),nth($button-colors-vars, $i),darken(nth($button-colors-vars, $i),10%));
          background-image: -webkit-radial-gradient(nth($button-colors-vars, $i),nth($button-colors-vars, $i),darken(nth($button-colors-vars, $i),10%));
          background-image: -o-radial-gradient(nth($button-colors-vars, $i),nth($button-colors-vars, $i),darken(nth($button-colors-vars, $i),10%));
          background-image: -moz-radial-gradient(nth($button-colors-vars, $i),nth($button-colors-vars, $i),darken(nth($button-colors-vars, $i),10%));
        }
        & input:checked + .toggle:after { color: nth($button-colors-vars, $i); }
      }

    $i: $i + 1;
    }

  } // <-- end .toggle-wrapper



  /**
   * Checkbox
   * --------------------------------------------------
   */
  .checkbox {
    padding-left: 2rem;
    margin: 2rem 0;

    & input[type="checkbox"] { opacity: 0; }

    & label {
      display: inline-block;
      position: relative;
      padding-left: 2rem;
      width: 25px;
      height: 25px;
      cursor: pointer;

      // Hover
      &:hover {
        &:before { 
          border-color: rgba(0,0,0,.35);
        }
      }

      // Active
      &:active {
        &:before { 
          @include box-shadow($button-inner-shadow);
        }
      }

      & span { white-space: nowrap; }

      &:before {
        content: "";
        display: inline-block;
        position: absolute;
        width: 25px;
        height: 25px;
        left: 0;
        margin-left: -20px;
        border: 1px solid rgba(0,0,0,.25);
        border-radius: 2px;
        background-color: white;
        @include transition(all 0.15s ease-in-out);
      }

      &:after {
        display: inline-block;
        position: absolute;
        width: 25px;
        height: 25px;
        left: 0;
        top: 0;
        opacity: 0;
        margin-left: -20px;
        padding: 2px 5px 3px 4px;
        line-height: 1.2;
        font-size: 1.6rem;
        border: solid 1px rgba(0,0,0,0);
        color: #777777;
        border-radius: 2px;
        font-family: 'FontAwesome';
        content: "\f00c";
        @include transition(all 0.15s ease-in-out);
      }
    }

    & input[type="checkbox"]:checked + label:after {
        opacity: 1;
    }

    // Disabled
    & input[type="checkbox"]:disabled + label {
      opacity: 0.3;
      cursor: not-allowed !important;
      &:before {
        background-color: #ebebeb !important;
        cursor: not-allowed !important;
      }
    }

    $checkbox-selector: ();
    @each $checkbox-item in $button-colors {
      $checkbox-selector: append($checkbox-selector, unquote('#{$checkbox-item}'), 'comma');
    }

    $i: 1;
    @each $checkbox-item-color in $checkbox-selector {

    &.checkbox-#{$checkbox-item-color} {
      & label {

        &:after {
          color: $button-font-color-light;
          background-color: nth($button-colors-vars, $i);
          background-image: radial-gradient(nth($button-colors-vars, $i),nth($button-colors-vars, $i),darken(nth($button-colors-vars, $i),10%));
          background-image: -webkit-radial-gradient(nth($button-colors-vars, $i),nth($button-colors-vars, $i),darken(nth($button-colors-vars, $i),10%));
          background-image: -o-radial-gradient(nth($button-colors-vars, $i),nth($button-colors-vars, $i),darken(nth($button-colors-vars, $i),10%));
          background-image: -moz-radial-gradient(nth($button-colors-vars, $i),nth($button-colors-vars, $i),darken(nth($button-colors-vars, $i),10%));

        }

        // Hover
        &:hover { 
          &:after {
            border-color: rgba(0,0,0,.2);
            @include box-shadow($button-outer-shadow);
          }
        }

        // Active
        &:active { 
          &:after {
            @include box-shadow($button-inner-shadow);
          }
        }

      }
    }

      $i: $i + 1;
    }



  } // <-- end .checkbox



  /**
   * Radio Button
   * --------------------------------------------------
   */
  .radio {
    padding-left: 2rem;
    margin: 2rem 0;

    & input[type="radio"] { opacity: 0; }

    & label {
      display: inline-block;
      position: relative;
      padding-left: 2rem;
      width: 25px;
      height: 25px;
      cursor: pointer;

      // Hover
      &:hover {
        &:before { 
          border-color: rgba(0,0,0,.35);
        }
      }

      // Active
      &:active {
        &:before { 
          @include box-shadow($button-inner-shadow);
        }
      }

      & span { white-space: nowrap; }

      &:before {
        content: "";
        display: inline-block;
        position: absolute;
        width: 25px;
        height: 25px;
        left: 0;
        margin-left: -20px;
        border: 1px solid rgba(0,0,0,.25);
        border-radius: 50px;
        background-color: white;
        @include transition(all 0.15s ease-in-out);
      }

      &:after {
        display: inline-block;
        position: absolute;
        width: 25px;
        height: 25px;
        left: 0;
        top: 0;
        opacity: 0;
        margin-left: -20px;
        padding: 5px 5px 5px 7px;
        line-height: 1.2;
        font-size: 1rem;
        border: solid 1px rgba(0,0,0,0);
        color: #777777;
        border-radius: 50px;
        font-family: 'FontAwesome';
        content: "\f111";
        @include transition(all 0.15s ease-in-out);
      }
    }

    & input[type="radio"]:checked + label:after {
        opacity: 1;
    }

    // Disabled
    & input[type="radio"]:disabled + label {
      opacity: 0.3;
      cursor: not-allowed !important;
      &:before {
        background-color: #ebebeb !important;
        cursor: not-allowed !important;
      }
    }

    $radio-selector: ();
    @each $radio-item in $button-colors {
      $radio-selector: append($radio-selector, unquote('#{$radio-item}'), 'comma');
    }

    $i: 1;
    @each $radio-item-color in $radio-selector {

    &.radio-#{$radio-item-color} {
      & label {

        &:after {
          color: $button-font-color-light;
          background-color: nth($button-colors-vars, $i);
          background-image: -webkit-linear-gradient(bottom left, lighten(nth($button-colors-vars, $i), 5%), lighten(nth($button-colors-vars, $i), 1%), darken(nth($button-colors-vars, $i), 10%));
          background-image: -o-linear-gradient(bottom left, lighten(nth($button-colors-vars, $i), 5%), lighten(nth($button-colors-vars, $i), 1%), darken(nth($button-colors-vars, $i), 10%));
          background-image: linear-gradient(to bottom right, lighten(nth($button-colors-vars, $i), 5%), lighten(nth($button-colors-vars, $i), 1%), darken(nth($button-colors-vars, $i), 10%));
          background-position: -1px 0px;
          background-size: 110%;
        }

        // Hover
        &:hover { 
          &:after {
            border-color: rgba(0,0,0,.2);
            @include box-shadow($button-outer-shadow);
          }
        }

        // Active
        &:active { 
          &:after {
            @include box-shadow($button-inner-shadow);
          }
        }

      }
    }

      $i: $i + 1;
    }



  } // <-- end .radio

}